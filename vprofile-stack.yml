- name: Create EC2 for App stack
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: Include out vars
      include_vars: out_IDs

    - name: Include out vars
      include_vars: vpc-setup
    
    - name: Include out vars
      include_vars: vprofile-stack-vars

    - name: Create key for ec2 instances
      amazon.aws.ec2_key:
        name: vprofilestack-key
        region: "{{region}}"
      register: key_out

    - name: Save private key into file vprofilestack-key.pem
      copy:
        content: "{{key_out.key.private_key}}"
        dest: "./vprofilestack-key.pem"
        mode: 0600
      when: key_out.changed

    - name: Create Security Group for Load Balancer
      amazon.aws.ec2_security_group:
        name: vproELB-sg
        description: Allow port 80 from everywhere and all ports within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out

    - name: Create Security Group for Vprofile Stack
      amazon.aws.ec2_security_group:
        name: vproStack-sg
        description: Allow port 22 from everywhere and all ports within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: sg-0d7fd479182d106b7
      register: vproStackSG_out

    - name: Creating Nginx web01
      amazon.aws.ec2_instance:
        key_name: vprofilestack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privatesubnet1}}"
      register: web01_out

    - name: Creating Tomcat app01
      amazon.aws.ec2_instance:
        key_name: vprofilestack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privatesubnet1}}"
      register: app01_out

    - name: Creating Memcache mc01
      amazon.aws.ec2_instance:
        key_name: vprofilestack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privatesubnet1}}"
      register: mc01_out

    - name: Creating RabbitMQ rmq01
      amazon.aws.ec2_instance:
        key_name: vprofilestack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privatesubnet1}}"
      register: rmq01_out

    - name: Creating MySQL db01
      amazon.aws.ec2_instance:
        key_name: vprofilestack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privatesubnet1}}"
      register: db01_out

    - debug:
        var: db01_out.tagged_instances[0].id